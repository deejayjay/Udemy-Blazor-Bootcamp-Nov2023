@page "/learnblazor/demoproduct"

<div class="row">
    <h2 class="text-primary">Demo Product</h2>
    <p class="lead">Number of Favorites: @FavortiesCount</p>
    <p class="lead">Last selected product: @LastSelectedProduct</p>
    @foreach (var prod in products)
    {
        <_IndividualProduct Product="@prod"
                            OnFavoriteUpdated="FavoriteCountUpdate"
                            OnProductSelected="UpdateLastSelectedProduct" />
    }
</div>

@code {
    List<Demo_Product> products = new();
    private int FavortiesCount { get; set; } = 0;
    private string LastSelectedProduct { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 13.99,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 11.99,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
                }
            });
    }

    // Increment count if selected, decrement if unselected
    protected void FavoriteCountUpdate(bool isSelected)
    {
        FavortiesCount = isSelected ? FavortiesCount + 1 : FavortiesCount - 1;
    }

    protected void UpdateLastSelectedProduct(string name)
    {
        LastSelectedProduct = name;
    }
}
