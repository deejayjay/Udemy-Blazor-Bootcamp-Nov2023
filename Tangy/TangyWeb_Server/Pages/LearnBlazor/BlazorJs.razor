@page "/learnblazor/blazorjs"
@inject IJSRuntime JSRuntime

<h3>Blazor JS</h3>

<div class="row mb-3">
    <div class="col-12 col-md-6 col-lg-3">
        <button type="button" class="btn btn-secondary w-100" @onclick="TestConfirm">Test Confirm Button</button>
    </div>
    <div class="col"></div>
</div>
<div class="row">

    @if (IsConfirmed)
    {
        <p class="alert alert-success" role="alert">
            Confirmed!
        </p>
    }
    else
    {
        <p class="alert alert-danger" role="alert">
            Not Confirmed!
        </p>
    }
</div>

<div class="row mb-3">
    <div class="col-12 col-md-6 col-lg-3">
        <button type="button" class="btn btn-success w-100" @onclick="ToastSuccess">Toastr Success</button>
    </div>
    <div class="col-12 col-md-6 col-lg-3 mt-3 mt-md-0">
        <button type="button" class="btn btn-danger w-100" @onclick="ToastFailure">Toastr Error</button>
    </div>
</div>

<div class="row">
    <div class="col-12 col-md-6 col-lg-3">
        <button type="button" class="btn btn-success w-100" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    </div>
    <div class="col-12 col-md-6 col-lg-3 mt-3 mt-md-0">
        <button type="button" class="btn btn-danger w-100" @onclick="SweetAlertFailure">SweetAlert Failure</button>
    </div>
</div>

@code {
    private string _confirmMessage = "Are you sure you want to delete?";
    public bool IsConfirmed { get; set; }

    private async Task TestConfirm()
    {
        IsConfirmed = await JSRuntime.InvokeAsync<bool>("confirm", _confirmMessage);
    }

    private async Task ToastSuccess()
    {
        await JSRuntime.ToastrSuccess("Toaster works!!!");
    }

    private async Task ToastFailure()
    {
        await JSRuntime.ToastrError("Toaster does not work...");
    }

    private async Task SweetAlertSuccess()
    {
        await JSRuntime.InvokeVoidAsync("showSwal", "success", "Task completed successfully!");
    }

    private async Task SweetAlertFailure()
    {
        await JSRuntime.InvokeVoidAsync("showSwal", "error", "Task failed!");
    }
}
