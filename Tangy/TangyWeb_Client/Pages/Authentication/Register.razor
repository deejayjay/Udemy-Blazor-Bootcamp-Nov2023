@page "/register"

@inject IAuthenticationService _authService
@inject NavigationManager _navigationManager

<EditForm Model="@signUpRequest" OnValidSubmit="@RegisterUser" class="pt-4">
    <DataAnnotationsValidator />
    <div class="py-4">
        <div class=" row form-group ">
            <div class="col-6 offset-3 ">
                <div class="card border">
                    <div class="card-body px-lg-5 pt-4">
                        <h3 class="col-12 text-success text-center py-2">
                            <strong>Sign Up</strong>
                        </h3>

                        @if (ShowRegistrationErrors)
                        {
                            <div class="alert alert-danger" role="alert">
                                <ul>
                                    @foreach (var error in Errors)
                                    {
                                        <li>@error</li>
                                    }
                                </ul>
                            </div>
                        }

                        <div class="py-2">
                            <InputText @bind-Value="signUpRequest.Name" class="form-control" placeholder="Name..." />
                            <ValidationMessage For="@(() => signUpRequest.Name)" />
                        </div>
                        <div class="py-2">
                            <InputText @bind-Value="signUpRequest.Email" class="form-control" placeholder="Email..." />
                            <ValidationMessage For="@(() => signUpRequest.Email)" />
                        </div>
                        <div class="py-2 input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> +1</span>
                            </div>
                            <InputText @bind-Value="signUpRequest.PhoneNumber" class="form-control" placeholder="Phone number..." />
                            <ValidationMessage For="@(() => signUpRequest.PhoneNumber)" />
                        </div>
                        <div class="form-row py-2">
                            <div class="col">
                                <InputText @bind-Value="signUpRequest.Password" type="password" id="password" placeholder="Password..." class="form-control" />
                                <ValidationMessage For="@(() => signUpRequest.Password)" />
                            </div>
                            <div class="col py-2">
                                <InputText @bind-Value="signUpRequest.ConfirmPassword" type="password" id="confirm" class="form-control" placeholder="Confirm Password..." />
                                <ValidationMessage For="@(() => signUpRequest.ConfirmPassword)" />
                            </div>
                        </div>
                        <hr style="background-color:aliceblue" />
                        <div class="py-2">
                            <button type="submit" class="btn btn-success btn-block"><i class="bi bi-person-plus-fill"></i> Register</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private SignUpRequestDto signUpRequest = new();
    private bool _isProcessing;
    private bool ShowRegistrationErrors { get; set; }
    private IEnumerable<string> Errors { get; set; } = new List<string>();

    private async Task RegisterUser()
    {
        ShowRegistrationErrors = false;
        _isProcessing = true;

        var result = await _authService.RegisterUserAsync(signUpRequest);

        if (result.IsRegistrationSuccessful)
        {
            // Registration successful, redirect to home page
            _navigationManager.NavigateTo("/login");
        }
        else
        {
            // Registration failed, display errors
            Errors = result.Errors;
            ShowRegistrationErrors = true;
        }

        _isProcessing = false;
    }
}